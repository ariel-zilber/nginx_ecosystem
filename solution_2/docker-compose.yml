version: '3.8'

services:
  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile  # You can specify a custom Dockerfile name if needed
    ports:
      - "5000:80"  # Maps port 80 on the host to port 80 in the container, replace $(PORT) with actual port if needed
    volumes:
      - ./nginx/app/html:/usr/share/nginx/html
      - ./nginx/app/conf/fastcgi_params:/etc/nginx/fastcgi_params
      - ./nginx/app/conf/uwsgi_params:/etc/nginx/uwsgi_params
      - ./nginx/app/conf/mime.types:/etc/nginx/mime.types
      - ./nginx/app/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/app/log:/var/log/nginx
      - ./nginx/app/conf/scgi_params:/etc/nginx/scgi_params
      - ./nginx/app/conf/conf.d:/etc/nginx/conf.d
    restart: unless-stopped
    networks:
      - mynetwork
  flask-animal-app-1:
    build:
      context: microservice
      dockerfile: Dockerfile  # You can specify a custom Dockerfile name if needed
    ports:
      - "5001:5000"
    environment:
      - INSTANCE_ID=1
    container_name: flask-animal-app-1
    networks:
      - mynetwork


  flask-animal-app-2:
    build:
      context: microservice
      dockerfile: Dockerfile  # You can specify a custom Dockerfile name if needed
    ports:
      - "5002:5000"
    environment:
      - INSTANCE_ID=2
    container_name: flask-animal-app-2
    networks:
      - mynetwork
  flask-animal-app-3:
    build:
      context: microservice
      dockerfile: Dockerfile  # You can specify a custom Dockerfile name if needed
    ports:
      - "5003:5000"
    environment:
      - INSTANCE_ID=3
    container_name: flask-animal-app-3
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge